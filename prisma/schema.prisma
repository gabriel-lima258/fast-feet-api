// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  DELIVERY_MAN
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  cpf       String    @unique
  password  String
  phone     String
  role      UserRole  @default(DELIVERY_MAN)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  deliveries   Delivery[]
  Notification Notification[]

  @@map("users")
}

model Delivery {
  id          String    @id @default(uuid())
  title       String
  status      String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @map("updated_at")
  postedAt    DateTime? @map("posted_at")
  pickedUpAt  DateTime? @map("picked_up_at")
  returnedAt  DateTime? @map("returned_at")
  deliveredAt DateTime? @map("delivered_at")
  userId      String    @map("user_id")
  recipientId String    @map("recipient_id")

  user      User      @relation(fields: [userId], references: [id])
  recipient Recipient @relation(fields: [recipientId], references: [id])

  attachments Attachment[]
}

model Recipient {
  id        String    @id @default(uuid())
  name      String
  street    String
  number    String
  city      String
  state     String
  cep       String
  latitude  Decimal
  longitude Decimal
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")

  deliveries Delivery[]

  @@map("recipients")
}

model Attachment {
  id         String  @id @default(uuid())
  title      String
  url        String
  deliveryId String? @map("delivery_id")

  delivery Delivery? @relation(fields: [deliveryId], references: [id])

  @@map("attachments")
}

model Notification {
  id        String    @id @default(uuid())
  title     String
  content   String
  readAt    DateTime? @map("read_at")
  createdAt DateTime  @default(now()) @map("created_at")
  recipientId    String @map("recipient_id")

  recipient User   @relation(fields: [recipientId], references: [id])

  @@map("notifications")
}
